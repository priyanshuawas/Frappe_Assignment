{
  "manifest": {
    "name": "native-request",
    "version": "1.1.0",
    "author": {
      "name": "Samuel Marchese",
      "email": "contact@zaral.fr",
      "url": "https://zaral.fr"
    },
    "bugs": {
      "url": "https://github.com/ZaralDev/native-request/issues"
    },
    "description": "A simple package with no dependencies for native requests using callback",
    "main": "index.js",
    "keywords": [
      "node-request",
      "native-request",
      "request",
      "node-fetch",
      "fetch",
      "request",
      "http",
      "GET",
      "get request",
      "http.get",
      "follow redirects",
      "https",
      "http-https",
      "simple request",
      "simple get"
    ],
    "license": "MIT",
    "devDependencies": {
      "mocha": "^6.2.3",
      "body-parser": "^1.19.0",
      "cookie-parser": "^1.4.5",
      "express": "^4.17.1"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/ZaralDev/native-request.git"
    },
    "scripts": {
      "test": "node ./node_modules/mocha/bin/mocha"
    },
    "_registry": "npm",
    "_loc": "/home/erp_user/.cache/yarn/v6/npm-native-request-1.1.0-acdb30fe2eefa3e1bc8c54b3a6852e9c5c0d3cb0-integrity/node_modules/native-request/package.json",
    "readmeFilename": "README.md",
    "readme": "# Native Request\n[![npm version](https://badge.fury.io/js/native-request.svg)](https://badge.fury.io/js/native-request) ![npm](https://img.shields.io/npm/dm/native-request)\n\n### v1.1 has been released\n\n\nNative Request is a simple module that makes you create native node.js requests supports https.\n\n  - supports HTTPS\n  - 0 dependencies\n  - use callbacks\n\n\n\n\n## Table of Contents  \n[Installation](#installation)  \n[Usage](#usage)\n[Planned features](#planned_features)\n\n\n\n## Planned features\n\n - 1.2.0: Proxy management\n \n\n## Installation\n\nInstall the dependencies and devDependencies and start the server.\n\n```bash\nnpm install native-request\n```\n\n## Usage\n\n### JSON request (recommended)\n - request.request(options, callback)\n\nEasy\n\n```js\nlet request = require('native-request');\n\nrequest.request({\n        url: \"http://github.com/\",\n        method: 'POST',\n    }, function(err, data, status, headers) {\n        console.log(status); //200\n        console.log(data); // page content\n        console.log(headers); // response headers\n});\n\n```\n\nFull\n```js\nlet request = require('native-request');\n\nrequest.request({\n        url: \"http://github.com/\",\n        method: 'POST',\n        Cookies: { john: \"doe\", human: true },\n        headers: {\n            authorization: \"Token121\"\n        },\n        requestOptions: {\n            followRedirect: false,\n            maxRedirect: 1,\n            trustRedirect: false\n        }\n\n    }, function(err, data, status, headers) {\n        console.log(status); //200\n        console.log(data); // page content\n        console.log(headers); // response headers\n});\n\n```\n\n#### Parameters\n| Options | Required  | Type  | Parameters |  Default \n|:--|:--:|:--: |-- |:--: |\n| url | ✓ | String |Target url | |\n| method| ✓ | String|HTTP method to use. More info [here](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods) | |\n| Headers | | JSON Object | Pass headers to the request with a JSON format.  | `{\"content-type\": \"application/json\"}` |\n| Cookies| | JSON Object | Pass cookies to the request with a JSON format  | |\n| requestOptions|  | See below |\n\n\n#### RequestOptions\nThe parameters below are here for client configuration. None of these parameters will be sent.\nThese parameters must be put in the object '**requestOptions**'\n\n | Options | Required | Type | Parameters |  Default\n|:--|:--:|:--: | -- | :--: |\n| followRedirect |  | boolean | Decide if we should follow the redirects | true\n| maxRedirect|  | int| Decide the maximum number of redirects allowed | 3\n| trustRedirect|  | boolean | If **false**, headers will not be sent when a redirect happen  | true\n\n\n\n\n\n\n\n\n### GET request\n -  request.get(path, headers, callback)\n -  request.get(path, callback)\n\n\n\n```js\nlet request = require('native-request');\nrequest.get('https://github.com', function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\nTo add custom **headers** just do like this:\n```js\nlet request = require('native-request');\n\nlet headers = {\n    \"content-type\": \"plain/text\"\n}\nrequest.get('https://github.com', headers, function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n### POST request\n -  request.post(path, callback)\n -  request.post(path, data, callback)\n -  request.post(path, data, headers, callback)\n\n \nTo send an empty **post**:\n```js\nlet request = require('native-request');\nrequest.post('https://github.com', function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n\nWith headers and data:\n\n```js\nlet request = require('native-request');\n\nlet data = {\n    \"example\": true,\n}\nlet headers = {\n    \"content-type\": \"plain/text\"\n}\nrequest.post('https://github.com', data, headers, function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n\n\n### License\nMIT. Copyright (c) Samuel Marchese.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/native-request/-/native-request-1.1.0.tgz#acdb30fe2eefa3e1bc8c54b3a6852e9c5c0d3cb0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/native-request/-/native-request-1.1.0.tgz",
    "hash": "acdb30fe2eefa3e1bc8c54b3a6852e9c5c0d3cb0",
    "integrity": "sha512-uZ5rQaeRn15XmpgE0xoPL8YWqcX90VtCFglYwAgkvKM5e8fog+vePLAhHxuuv/gRkrQxIeh5U3q9sMNUrENqWw==",
    "registry": "npm",
    "packageName": "native-request",
    "cacheIntegrity": "sha512-uZ5rQaeRn15XmpgE0xoPL8YWqcX90VtCFglYwAgkvKM5e8fog+vePLAhHxuuv/gRkrQxIeh5U3q9sMNUrENqWw== sha1-rNsw/i7vo+G8jFSzpoUunFwNPLA="
  },
  "registry": "npm",
  "hash": "acdb30fe2eefa3e1bc8c54b3a6852e9c5c0d3cb0"
}