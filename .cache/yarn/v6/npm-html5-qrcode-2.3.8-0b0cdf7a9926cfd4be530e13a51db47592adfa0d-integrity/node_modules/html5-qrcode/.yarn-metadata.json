{
  "manifest": {
    "name": "html5-qrcode",
    "version": "2.3.8",
    "description": "A cross platform HTML5 QR Code & bar code scanner",
    "main": "./cjs/index.js",
    "module": "./esm/index.js",
    "typings": "./esm/index.d.ts",
    "esnext": "./es2015/index.js",
    "unpkg": "./html5-qrcode.min.js",
    "scripts": {
      "build-windows": "npm run build:es2015 && npm run build:esm && npm run build:esnext && npm run build:cjs && npm run build:umd_windows && npm run build:typing && npm run build:copy_windows",
      "test": "npm run-script test:build && npm run-script test:run",
      "test_windows": "npm run-script test:build && npm run-script test:run_windows",
      "test:build": "tsc --build tsconfig.test.json",
      "test:run_windows": ".\\scripts\\test-run.bat",
      "test:run": "./scripts/test-run.sh",
      "lint-md": "remark .",
      "clean": "rm -Rf ./lib/* ./build/* ./meta/bundlesize/* ./meta/coverage/* ./.rpt2_cache  ./dist/* ./src/*.d.ts",
      "prebuild": "npm run clean",
      "postbuild": "cp -R ./third_party ./dist/third_party",
      "build": "npm run build:es2015 && npm run build:esm && npm run build:esnext && npm run build:cjs && npm run build:umd && npm run build:typing && npm run build:copy",
      "build:es2015": "tsc --build tsconfig.lib-es2015.json",
      "build:esm": "tsc --build tsconfig.lib-esm.json",
      "build:esnext": "tsc --build tsconfig.lib-esm.json",
      "build:cjs": "tsc --build tsconfig.lib-cjs.json",
      "build:typing": "tsc --emitDeclarationOnly --outDir ./dist",
      "build:umd": "./scripts/build-webpack.sh",
      "build:umd_windows": ".\\scripts\\build-webpack.bat",
      "build:copy": "cp README.md dist && cp package.json dist && cp LICENSE dist && cp -R src dist/src",
      "build:copy_windows": "copy README.md dist && copy package.json dist && copy LICENSE dist",
      "internal_release": "npm run build && cp dist/html5-qrcode.min.js minified/html5-qrcode.min.js",
      "release": "npm run build && cp dist/html5-qrcode.min.js minified/html5-qrcode.min.js && cd dist && npm publish",
      "release_windows": "npm run build && cp dist\\html5-qrcode.min.js minified\\html5-qrcode.min.js && cd dist && npm publish",
      "doc_gen": "npx typedoc --excludePrivate src/index.ts"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/mebjas/html5-qrcode.git"
    },
    "keywords": [
      "html5",
      "qrcode",
      "html",
      "camera",
      "scanner",
      "barcode",
      "barcode 1d",
      "barcode 2d"
    ],
    "author": {
      "name": "minhazav@gmail.com"
    },
    "license": "Apache-2.0",
    "bugs": {
      "url": "https://github.com/mebjas/html5-qrcode/issues"
    },
    "homepage": "https://github.com/mebjas/html5-qrcode#readme",
    "devDependencies": {
      "@babel/cli": "^7.10.5",
      "@babel/core": "^7.11.4",
      "@babel/plugin-proposal-class-properties": "^7.10.4",
      "@babel/preset-env": "^7.11.0",
      "@types/chai": "^4.3.0",
      "@types/mocha": "^9.0.0",
      "babel-minify": "^0.5.1",
      "chai": "^4.3.4",
      "docusaurus-plugin-typedoc": "^0.18.0",
      "expose-loader": "^2.0.0",
      "jsdom": "20.0.2",
      "jsdom-global": "3.0.2",
      "mocha": "^9.1.3",
      "mocha-lcov-reporter": "^1.3.0",
      "promise-polyfill": "^8.1.3",
      "remark-cli": "^9.0.0",
      "remark-preset-lint-recommended": "^5.0.0",
      "rewire": "^5.0.0",
      "ts-loader": "^9.1.2",
      "ts-node": "^10.4.0",
      "tsconfig-paths": "^3.12.0",
      "typedoc": "^0.23.28",
      "typedoc-plugin-markdown": "^3.14.0",
      "typescript": "^4.3.2",
      "typings": "^2.1.1",
      "webpack": "^5.37.0",
      "webpack-cli": "^4.7.0"
    },
    "remarkConfig": {
      "plugins": [
        "remark-preset-lint-recommended"
      ]
    },
    "publishConfig": {
      "access": "public"
    },
    "_registry": "npm",
    "_loc": "/home/erp_user/.cache/yarn/v6/npm-html5-qrcode-2.3.8-0b0cdf7a9926cfd4be530e13a51db47592adfa0d-integrity/node_modules/html5-qrcode/package.json",
    "readmeFilename": "README.md",
    "readme": "# Html5-QRCode \n\n## Lightweight & cross platform QR Code and Bar code scanning library for the web\n\nUse this lightweight library to easily / quickly integrate QR code, bar code, and other common code scanning capabilities to your web application.\n\n## Key highlights\n-   🔲 Support scanning [different types of bar codes and QR codes](#supported-code-formats).\n\n-   🖥 Supports [different platforms](#supported-platforms) be it Android, IOS, MacOs, Windows or Linux\n\n-   🌐 Supports [different browsers](#supported-platforms) like Chrome, Firefox, Safari, Edge, Opera ...\n\n-   📷 Supports scanning with camera as well as local files\n\n-   ➡️ Comes with an [end to end library with UI](#easy-mode---with-end-to-end-scanner-user-interface) as well as a [low level library to build your own UI with](#pro-mode---if-you-want-to-implement-your-own-user-interface).\n\n-   🔦 Supports customisations like [flash/torch support](#showtorchbuttonifsupported---boolean--undefined), zooming etc.\n\n\nSupports two kinds of APIs\n\n-   `Html5QrcodeScanner` — End-to-end scanner with UI, integrate with less than ten lines of code.\n    \n-   `Html5Qrcode` — Powerful set of APIs you can use to build your UI without worrying about camera setup, handling permissions, reading codes, etc.\n\n> Support for scanning local files on the device is a new addition and helpful for the web browser which does not support inline web-camera access in smartphones. **Note:** This doesn't upload files to any server — everything is done locally.\n\n[![CircleCI](https://dl.circleci.com/status-badge/img/gh/mebjas/html5-qrcode/tree/master.svg?style=svg)](https://dl.circleci.com/status-badge/redirect/gh/mebjas/html5-qrcode/tree/master) [![GitHub issues](https://img.shields.io/github/issues/mebjas/html5-qrcode)](https://github.com/mebjas/html5-qrcode/issues) [![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/mebjas/html5-qrcode)](https://github.com/mebjas/html5-qrcode/releases) ![GitHub](https://img.shields.io/github/license/mebjas/html5-qrcode) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/51e4f0ef8b0b42e1b93ce29875dd23a0)](https://www.codacy.com/gh/mebjas/html5-qrcode/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mebjas/html5-qrcode&amp;utm_campaign=Badge_Grade) [![Gitter](https://badges.gitter.im/html5-qrcode/community.svg)](https://gitter.im/html5-qrcode/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n![GitHub all releases](https://img.shields.io/github/downloads/mebjas/html5-qrcode/total?label=Github%20downloads&style=for-the-badge) [![npm](https://img.shields.io/npm/dw/html5-qrcode?label=npm%20downloads&style=for-the-badge)](https://www.npmjs.com/package/html5-qrcode) [![](https://img.shields.io/badge/Medium-12100E?style=for-the-badge&logo=medium&logoColor=white)](https://bit.ly/3CZiASv)\n\n| <img src=\"https://scanapp.org/assets/github_assets/pixel6pro-optimised.gif\" width=\"180px\" /> | <img src=\"https://scanapp.org/assets/github_assets/pixel4_barcode_480.gif\" width=\"180px\" />|\n| -- | -- |\n| _Demo at [scanapp.org](https://scanapp.org)_ | _Demo at [qrcode.minhazav.dev](https://qrcode.minhazav.dev) - **Scanning different types of codes**_ |\n\n## We need your help!\n\n![image](https://user-images.githubusercontent.com/3007365/222830114-e5bcca15-bf8a-434e-9f48-339e82a0a4ef.png)\nHelp incentivise feature development, bug fixing by supporting the sponsorhip goals of this project. See [list of sponsered feature requests here](https://github.com/mebjas/html5-qrcode/wiki/Feature-request-sponsorship-goals#feature-requests).\n\n[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/L3L84G0C8)\n\n## Documentation\n\nThe documentation for this project has been moved to [scanapp.org/html5-qrcode-docs](https://scanapp.org/html5-qrcode-docs/).\n\n-   [Getting started](https://scanapp.org/html5-qrcode-docs/docs/intro)\n-   [Supported frameworks](https://scanapp.org/html5-qrcode-docs/docs/supported_frameworks)\n-   [Supported 1D and 2D Code formats](https://scanapp.org/html5-qrcode-docs/docs/supported_code_formats)\n-   [Detailed API documentation](https://scanapp.org/html5-qrcode-docs/docs/apis)\n\n## Supported platforms\n\nWe are working continuously on adding support for more and more platforms. If you find a platform or a browser where the library is not working, please feel free to file an issue. Check the [demo link](https://blog.minhazav.dev/research/html5-qrcode.html) to test it out.\n\n**Legends**\n-   ![](https://scanapp.org/assets/github_assets/done.png) Means full support — inline webcam and file based \n-   ![](https://scanapp.org/assets/github_assets/partial.png) Means partial support — only file based, webcam in progress\n\n### PC / Mac\n\n| <img src=\"https://scanapp.org/assets/github_assets/browsers/firefox_48x48.png\" alt=\"Firefox\" width=\"24px\" height=\"24px\" /><br/>Firefox | <img src=\"https://scanapp.org/assets/github_assets/browsers/chrome_48x48.png\" alt=\"Chrome\" width=\"24px\" height=\"24px\" /><br/>Chrome | <img src=\"https://scanapp.org/assets/github_assets/browsers/safari_48x48.png\" alt=\"Safari\" width=\"24px\" height=\"24px\" /><br/>Safari | <img src=\"https://scanapp.org/assets/github_assets/browsers/opera_48x48.png\" alt=\"Opera\" width=\"24px\" height=\"24px\" /><br/>Opera | <img src=\"https://scanapp.org/assets/github_assets/browsers/edge_48x48.png\" alt=\"Edge\" width=\"24px\" height=\"24px\" /><br/> Edge\n| --------- | --------- | --------- | --------- | ------- |\n|![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png) | ![](https://scanapp.org/assets/github_assets/done.png)\n\n### Android\n\n| <img src=\"https://scanapp.org/assets/github_assets/browsers/chrome_48x48.png\" alt=\"Chrome\" width=\"24px\" height=\"24px\" /><br/>Chrome | <img src=\"https://scanapp.org/assets/github_assets/browsers/firefox_48x48.png\" alt=\"Firefox\" width=\"24px\" height=\"24px\" /><br/>Firefox | <img src=\"https://scanapp.org/assets/github_assets/browsers/edge_48x48.png\" alt=\"Edge\" width=\"24px\" height=\"24px\" /><br/> Edge | <img src=\"https://scanapp.org/assets/github_assets/browsers/opera_48x48.png\" alt=\"Opera\" width=\"24px\" height=\"24px\" /><br/>Opera | <img src=\"https://scanapp.org/assets/github_assets/browsers/opera-mini_48x48.png\" alt=\"Opera-Mini\" width=\"24px\" height=\"24px\" /><br/> Opera Mini | <img src=\"https://scanapp.org/assets/github_assets/browsers/uc_48x48.png\" alt=\"UC\" width=\"24px\" height=\"24px\" /> <br/> UC\n| --------- | --------- | --------- | --------- |  --------- | --------- |\n|![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/partial.png) | ![](https://scanapp.org/assets/github_assets/partial.png) \n\n### IOS\n\n| <img src=\"https://scanapp.org/assets/github_assets/browsers/safari_48x48.png\" alt=\"Safari\" width=\"24px\" height=\"24px\" /><br/>Safari | <img src=\"https://scanapp.org/assets/github_assets/browsers/chrome_48x48.png\" alt=\"Chrome\" width=\"24px\" height=\"24px\" /><br/>Chrome | <img src=\"https://scanapp.org/assets/github_assets/browsers/firefox_48x48.png\" alt=\"Firefox\" width=\"24px\" height=\"24px\" /><br/>Firefox | <img src=\"https://scanapp.org/assets/github_assets/browsers/edge_48x48.png\" alt=\"Edge\" width=\"24px\" height=\"24px\" /><br/> Edge \n| --------- | --------- | --------- | --------- |\n|![](https://scanapp.org/assets/github_assets/done.png)| ![](https://scanapp.org/assets/github_assets/done.png)* | ![](https://scanapp.org/assets/github_assets/done.png)* | ![](https://scanapp.org/assets/github_assets/partial.png) \n\n\n> \\* Supported for IOS versions >= 15.1\n>\n> Before version 15.1, Webkit for IOS is used by Chrome, Firefox, and other browsers in IOS and they do not have webcam permissions yet. There is an ongoing issue on fixing the support for iOS - [issue/14](https://github.com/mebjas/html5-qrcode/issues/14)\n\n### Framework support\nThe library can be easily used with several other frameworks, I have been adding examples for a few of them and would continue to add more.\n\n|<img src=\"https://scanapp.org/assets/github_assets/html5.png\" width=\"30px\" />| <img src=\"https://scanapp.org/assets/github_assets/vuejs.png\" width=\"30px\" />|<img src=\"https://scanapp.org/assets/github_assets/electron.png\" width=\"30px\" /> | <img src=\"https://scanapp.org/assets/github_assets/react.svg\" width=\"30px\" /> | <img src=\"https://seeklogo.com/images/L/lit-logo-6B43868CDC-seeklogo.com.png\" width=\"30px\" />\n| -------- | -------- | -------- | -------- | -------- |\n| [Html5](./examples/html5) | [VueJs](./examples/vuejs) | [ElectronJs](./examples/electron) | [React](https://github.com/scanapp-org/html5-qrcode-react) | [Lit](./examples/lit)\n\n### Supported Code formats\nCode scanning is dependent on [Zxing-js](https://github.com/zxing-js/library) library. We will be working on top of it to add support for more types of code scanning. If you feel a certain type of code would be helpful to have, please file a feature request.\n\n| Code | Example |\n| ---- | ----- |\n| QR Code | <img src=\"https://scanapp.org/assets/github_assets/qr-code.png\" width=\"200px\" /> |\n| AZTEC | <img src=\"https://scanapp.org/assets/github_assets/aztec.png\" /> |\n| CODE_39|  <img src=\"https://scanapp.org/assets/github_assets/code_39.gif\" /> |\n| CODE_93| <img src=\"https://scanapp.org/assets/github_assets/code_93.gif\" />|\n| CODE_128| <img src=\"https://scanapp.org/assets/github_assets/code_128.gif\" />|\n| ITF| <img src=\"https://scanapp.org/assets/github_assets/itf.png\" />|\n| EAN_13|<img src=\"https://scanapp.org/assets/github_assets/ean13.jpeg\" /> |\n| EAN_8| <img src=\"https://scanapp.org/assets/github_assets/ean8.jpeg\" />|\n| PDF_417| <img src=\"https://scanapp.org/assets/github_assets/pdf417.png\" />|\n| UPC_A| <img src=\"https://scanapp.org/assets/github_assets/upca.jpeg\" />|\n| UPC_E| <img src=\"https://scanapp.org/assets/github_assets/upce.jpeg\" />|\n| DATA_MATRIX|<img src=\"https://scanapp.org/assets/github_assets/datamatrix.png\" /> |\n| MAXICODE*| <img src=\"https://scanapp.org/assets/github_assets/maxicode.gif\" /> |\n| RSS_14*| <img src=\"https://scanapp.org/assets/github_assets/rss14.gif\" />|\n| RSS_EXPANDED*|<img src=\"https://scanapp.org/assets/github_assets/rssexpanded.gif\" /> |\n\n> *Formats are not supported by our experimental integration with native\n> BarcodeDetector API integration ([Read more](/experimental.md)).\n\n## Description - [View Demo](https://blog.minhazav.dev/research/html5-qrcode.html)\n\n> See an end to end scanner experience at [scanapp.org](https://scanapp.org).\n\nThis is a cross-platform JavaScript library to integrate QR code, bar codes & a few other types of code scanning capabilities to your applications running on HTML5 compatible browser.\n\nSupports:\n-   Querying camera on the device (with user permissions)\n-   Rendering live camera feed, with easy to use user interface for scanning\n-   Supports scanning a different kind of QR codes, bar codes and other formats\n-   Supports selecting image files from the device for scanning codes\n\n## How to use\n\nFind detailed guidelines on how to use this library on [scanapp.org/html5-qrcode-docs](https://scanapp.org/html5-qrcode-docs/docs/intro).\n\n## Demo\n<img src=\"https://scanapp.org/assets/github_assets/qr-code.png\" width=\"200px\"><br />\n_Scan this image or visit [blog.minhazav.dev/research/html5-qrcode.html](https://blog.minhazav.dev/research/html5-qrcode.html)_\n\n### For more information\nCheck these articles on how to use this library:\n<!-- TODO(mebjas) Mirgate this link to blog.minhazav.dev -->\n-   [QR and barcode scanner using HTML and JavaScript](https://minhazav.medium.com/qr-and-barcode-scanner-using-html-and-javascript-2cdc937f793d)\n-   [HTML5 QR Code scanning — launched v1.0.1 without jQuery dependency and refactored Promise based APIs](https://blog.minhazav.dev/HTML5-QR-Code-scanning-launched-v1.0.1/).\n-   [HTML5 QR Code scanning with JavaScript — Support for scanning the local file and using default camera added (v1.0.5)](https://blog.minhazav.dev/HTML5-QR-Code-scanning-support-for-local-file-and-default-camera/)\n\n## Screenshots\n![screenshot](https://scanapp.org/assets/github_assets/screen.gif)<br />\n_Figure: Screenshot from Google Chrome running on MacBook Pro_\n\n## Documentation\nFind the full API documentation at [scanapp.org/html5-qrcode-docs/docs/apis](https://scanapp.org/html5-qrcode-docs/docs/apis).\n\n### Extra optional `configuration` in `start()` method\nConfiguration object that can be used to configure both the scanning behavior and the user interface (UI). Most of the fields have default properties that will be used unless a different value is provided. If you do not want to override anything, you can just pass in an empty object `{}`.\n\n#### `fps` — Integer, Example = 10\nA.K.A frame per second, the default value for this is 2, but it can be increased to get faster scanning. Increasing too high value could affect performance. Value `>1000` will simply fail.\n\n#### `qrbox` — `QrDimensions` or `QrDimensionFunction` (Optional), Example = `{ width: 250, height: 250 }`\nUse this property to limit the region of the viewfinder you want to use for scanning. The rest of the viewfinder would be shaded. For example, by passing config `{ qrbox : { width: 250, height: 250 } }`, the screen will look like:\n\n<img src=\"https://scanapp.org/assets/github_assets/screen.gif\" />\n\nThis can be used to set a rectangular scanning area with config like:\n\n```js\nlet config = { qrbox : { width: 400, height: 150 } }\n```\n\nThis config also accepts a function of type\n```ts\n/**\n  * A function that takes in the width and height of the video stream \n* and returns QrDimensions.\n* \n* Viewfinder refers to the video showing camera stream.\n*/\ntype QrDimensionFunction =\n    (viewfinderWidth: number, viewfinderHeight: number) => QrDimensions;\n```\n\nThis allows you to set dynamic QR box dimensions based on the video dimensions. See this blog article for example: [Setting dynamic QR box size in Html5-qrcode - ScanApp blog](https://scanapp.org/blog/2022/01/09/setting-dynamic-qr-box-size-in-html5-qrcode.html)\n\n> This might be desirable for bar code scanning.\n\nIf this value is not set, no shaded QR box will be rendered and the scanner will scan the entire area of video stream.\n\n#### `aspectRatio` — Float, Example 1.777778 for 16:9 aspect ratio\nUse this property to render the video feed in a certain aspect ratio. Passing a nonstandard aspect ratio like `100000:1` could lead to the video feed not even showing up. Ideal values can be:\n| Value | Aspect Ratio | Use Case |\n| ----- | ------------ | -------- |\n|1.333334 | 4:3 | Standard camera aspect ratio |\n|1.777778 | 16:9 | Full screen, cinematic |\n|1.0 | 1:1 | Square view |\n\nIf you do not pass any value, the whole viewfinder would be used for scanning. \n**Note**: this value has to be smaller than the width and height of the `QR code HTML element`.\n\n#### `disableFlip` — Boolean (Optional), default = false\nBy default, the scanner can scan for horizontally flipped QR Codes. This also enables scanning QR code using the front camera on mobile devices which are sometimes mirrored. This is `false` by default and I recommend changing this only if:\n-   You are sure that the camera feed cannot be mirrored (Horizontally flipped)\n-   You are facing performance issues with this enabled.\n\nHere's an example of a normal and mirrored QR Code\n| Normal QR Code | Mirrored QR Code |\n| ----- | ---- |\n| <img src=\"https://scanapp.org/assets/github_assets/qr-code.png\" width=\"200px\" /> | <img src=\"https://scanapp.org/assets/github_assets/qr-code-flipped.png\" width=\"200px\" /><br /> |\n\n#### `rememberLastUsedCamera` — Boolean (Optional), default = true\nIf `true` the last camera used by the user and weather or not permission was granted would be remembered in the local storage. If the user has previously granted permissions — the request permission option in the UI will be skipped and the last selected camera would be launched automatically for scanning.\n\nIf `true` the library shall remember if the camera permissions were previously\ngranted and what camera was last used. If the permissions is already granted for\n\"camera\", QR code scanning will automatically * start for previously used camera.\n\n#### `supportedScanTypes` - `Array<Html5QrcodeScanType> | []`\n> This is only supported for `Html5QrcodeScanner`.\n\nDefault = `[Html5QrcodeScanType.SCAN_TYPE_CAMERA, Html5QrcodeScanType.SCAN_TYPE_FILE]`\n\nThis field can be used to:\n-   Limit support to either of `Camera` or `File` based scan.\n-   Change default scan type.\n\nHow to use:\n\n```js\nfunction onScanSuccess(decodedText, decodedResult) {\n  // handle the scanned code as you like, for example:\n  console.log(`Code matched = ${decodedText}`, decodedResult);\n}\n\nlet config = {\n  fps: 10,\n  qrbox: {width: 100, height: 100},\n  rememberLastUsedCamera: true,\n  // Only support camera scan type.\n  supportedScanTypes: [Html5QrcodeScanType.SCAN_TYPE_CAMERA]\n};\n\nlet html5QrcodeScanner = new Html5QrcodeScanner(\n  \"reader\", config, /* verbose= */ false);\nhtml5QrcodeScanner.render(onScanSuccess);\n```\n\nFor file based scan only choose:\n```js\nsupportedScanTypes: [Html5QrcodeScanType.SCAN_TYPE_FILE]\n```\n\nFor supporting both as it is today, you can ignore this field or set as:\n```js\nsupportedScanTypes: [\n  Html5QrcodeScanType.SCAN_TYPE_CAMERA,\n  Html5QrcodeScanType.SCAN_TYPE_FILE]\n```\n\nTo set the file based scan as defult change the order:\n```js\nsupportedScanTypes: [\n  Html5QrcodeScanType.SCAN_TYPE_FILE,\n  Html5QrcodeScanType.SCAN_TYPE_CAMERA]\n```\n\n#### `showTorchButtonIfSupported` - `boolean | undefined`\n> This is only supported for `Html5QrcodeScanner`.\n\nIf `true` the rendered UI will have button to turn flash on or off based on device + browser support. The value is `false` by default.\n\n### Scanning only specific formats\nBy default, both camera stream and image files are scanned against all the\nsupported code formats.  Both `Html5QrcodeScanner` and `Html5Qrcode` classes can\n be configured to only support a subset of supported formats. Supported formats\nare defined in\n[enum Html5QrcodeSupportedFormats](https://github.com/mebjas/html5-qrcode/blob/master/src/core.ts#L14).\n\n```ts\nenum Html5QrcodeSupportedFormats {\n  QR_CODE = 0,\n  AZTEC,\n  CODABAR,\n  CODE_39,\n  CODE_93,\n  CODE_128,\n  DATA_MATRIX,\n  MAXICODE,\n  ITF,\n  EAN_13,\n  EAN_8,\n  PDF_417,\n  RSS_14,\n  RSS_EXPANDED,\n  UPC_A,\n  UPC_E,\n  UPC_EAN_EXTENSION,\n}\n```\n\nI recommend using this only if you need to explicitly omit support for certain\nformats or want to reduce the number of scans done per second for performance\nreasons.\n\n#### Scanning only QR code with `Html5Qrcode`\n```js\nconst html5QrCode = new Html5Qrcode(\n  \"reader\", { formatsToSupport: [ Html5QrcodeSupportedFormats.QR_CODE ] });\nconst qrCodeSuccessCallback = (decodedText, decodedResult) => {\n    /* handle success */\n};\nconst config = { fps: 10, qrbox: { width: 250, height: 250 } };\n\n// If you want to prefer front camera\nhtml5QrCode.start({ facingMode: \"user\" }, config, qrCodeSuccessCallback);\n```\n\n#### Scanning only QR code and UPC codes with `Html5QrcodeScanner`\n```js\nfunction onScanSuccess(decodedText, decodedResult) {\n  // Handle the scanned code as you like, for example:\n  console.log(`Code matched = ${decodedText}`, decodedResult);\n}\n\nconst formatsToSupport = [\n  Html5QrcodeSupportedFormats.QR_CODE,\n  Html5QrcodeSupportedFormats.UPC_A,\n  Html5QrcodeSupportedFormats.UPC_E,\n  Html5QrcodeSupportedFormats.UPC_EAN_EXTENSION,\n];\nconst html5QrcodeScanner = new Html5QrcodeScanner(\n  \"reader\",\n  {\n    fps: 10,\n    qrbox: { width: 250, height: 250 },\n    formatsToSupport: formatsToSupport\n  },\n  /* verbose= */ false);\nhtml5QrcodeScanner.render(onScanSuccess);\n```\n\n## Experimental features\nThe library now supports some experimental features which are supported in the\nlibrary but not recommended for production usage either due to limited testing\ndone or limited compatibility for underlying APIs used. Read more about it [here](/experimental.md).\nSome experimental features include:\n-   [Support for BarcodeDetector JavaScript API](/experimental.md)\n\n## How to modify and build\n1.  Code changes should only be made to [/src](./src) only.\n\n2.  Run `npm install` to install all dependencies.\n\n3.  Run `npm run-script build` to build JavaScript output. The output JavaScript distribution is built to [/dist/html5-qrcode.min.js](./dist/html5-qrcode.min.js). If you are developing on Windows OS, run `npm run-script build-windows`.\n\n4.  Testing\n    -   Run `npm test`\n    -   Run the tests before sending a pull request, all tests should run.\n    -   Please add tests for new behaviors sent in PR.\n\n5.  Send a pull request\n    -   Include code changes only to `./src`. **Do not change `./dist` manually.**\n    -   In the pull request add a comment like\n\t  ```text\n\t  @all-contributors please add @mebjas for this new feature or tests\n\t  ```\n\t  -   For calling out your contributions, the bot will update the contributions file.\n    -   Code will be built & published by the author in batches.\n\n## How to contribute\nYou can contribute to the project in several ways:\n\n-   File issue ticket for any observed bug or compatibility issue with the project.\n-   File feature request for missing features.\n-   Take open bugs or feature request and work on it and send a Pull Request.\n-   Write unit tests for existing codebase (which is not covered by tests today). **Help wanted on this** - [read more](./tests).\n\n## Support 💖\n\nThis project would not be possible without all of our fantastic contributors and [sponsors](https://github.com/sponsors/mebjas). If you'd like to support the maintenance and upkeep of this project you can [donate via GitHub Sponsors](https://github.com/sponsors/mebjas).\n\n**Sponsor the project for priortising feature requests / bugs relevant to you**. (Depends on scope of ask and bandwidth of the contributors).\n\n<!-- sponsors -->\n<a href=\"https://github.com/webauthor\"><img src=\"https://github.com/webauthor.png\" width=\"40px\" alt=\"webauthor@\" /></a>\n<a href=\"https://github.com/ben-gy\"><img src=\"https://github.com/ben-gy.png\" width=\"40px\" alt=\"ben-gy\" /></a>\n<a href=\"https://github.com/bujjivadu\"><img src=\"https://github.com/bujjivadu.png\" width=\"40px\" alt=\"bujjivadu\" /></a>\n<!-- sponsors -->\n\nHelp incentivise feature development, bug fixing by supporting the sponsorhip goals of this project. See [list of sponsered feature requests here](https://github.com/mebjas/html5-qrcode/wiki/Feature-request-sponsorship-goals#feature-requests).\n\nAlso, huge thanks to following organizations for non monitery sponsorships\n\n<!-- sponsors -->\n<div>\n\t<a href=\"https://scanapp.org\"><img src=\"https://scanapp.org/assets/svg/scanapp.svg\" height=\"60px\" alt=\"\" /></a>\n</div>\n<div>\n\t<a href=\"https://www.browserstack.com\"><img src=\"https://www.browserstack.com/images/layout/browserstack-logo-600x315.png\" height=\"100px\" alt=\"\" /></a>\n</div>\n<!-- sponsors -->\n\n## Credits\nThe decoder used for the QR code reading is from `Zxing-js` https://github.com/zxing-js/library<br />\n",
    "licenseText": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2020] [MINHAZ <minhazav@gmail.com>]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/html5-qrcode/-/html5-qrcode-2.3.8.tgz#0b0cdf7a9926cfd4be530e13a51db47592adfa0d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/html5-qrcode/-/html5-qrcode-2.3.8.tgz",
    "hash": "0b0cdf7a9926cfd4be530e13a51db47592adfa0d",
    "integrity": "sha512-jsr4vafJhwoLVEDW3n1KvPnCCXWaQfRng0/EEYk1vNcQGcG/htAdhJX0be8YyqMoSz7+hZvOZSTAepsabiuhiQ==",
    "registry": "npm",
    "packageName": "html5-qrcode",
    "cacheIntegrity": "sha512-jsr4vafJhwoLVEDW3n1KvPnCCXWaQfRng0/EEYk1vNcQGcG/htAdhJX0be8YyqMoSz7+hZvOZSTAepsabiuhiQ== sha1-Cwzfepkmz9S+Uw4TpR20dZKt+g0="
  },
  "registry": "npm",
  "hash": "0b0cdf7a9926cfd4be530e13a51db47592adfa0d"
}